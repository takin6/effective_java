ITEM 56: WRITE DOC COMMENTS FOR ALL EXPOSED API ELEMENTS

- Javadoc utility: Javadoc generates API documentation automatically from source code with
                   specially formatted documentation comments, more commonly known as doc comments.

- How to Write Doc Comments for the Javadoc Tool
https://www.oracle.com/technical-resources/articles/java/javadoc-tool.html#:~:text=Writing%20Doc%20Comments-,Format%20of%20a%20Doc%20Comment,%40return%20%2C%20and%20%40see%20.

- To document your API properly, you must precede every exported class, interface, constructor, method, and field declaration with a doc comment.

- The doc comment for a method should describe succinctly the contract between the method and its client.
    - the contract should say what the method does rather than how it does its job
    - The doc comment should enumerate all of the methodâ€™s preconditions: things that have to be true in order for a client to invoke it
    - postconditions, which are the things that will be true after the invocation has completed successfully
    - methods should document any side effects: observable change in the state of the system that is not obviously required in order to achieve the postcondition
    - when you design a class for inheritance, you must document its self-use patterns, so programmers know the semantics of overriding its methods. These self-use patterns should be documented using the @implSpec tag

- doc comments should be readable both in the source code and in the generated documentation.

- no two members or constructors in a class or interface should have the same summary description.

- Generics, enums, and annotations require special care in doc comments.
  When documenting a generic type or method, be sure to document all type parameters

- When documenting an enum type, be sure to document the constants

- Whether or not a class or static method is thread-safe, you should document its thread-safety

- read the web pages generated by the Javadoc utility.

SUMMARY
To summarize, documentation comments are the best, most effective way to document your API.
Their use should be considered mandatory for all exported API elements.
Adopt a consistent style that adheres to standard conventions.
Remember that arbitrary HTML is permissible in documentation comments and that HTML metacharacters must be escaped.